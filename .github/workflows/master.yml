# Ideas borrowed from https://github.com/anothrNick/github-tag-action

name: Master Zipper Upper
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Create Release Folder
      run: rsync -arv --exclude='.git/' --exclude='.github/' --exclude='.gitignore' . ./release

    - name: Switch to Release Folder
      run: |
        cd release
        ls -la

    - name: Grab version from meta data
      run: echo "TAG=v$(jq .version metadata.json)" >> $GITHUB_ENV

#    - name: See if tag exists
#      run: |
#        echo "TAG=$(git tag --format='%(refname:short)' --merged master '$VERSION*' | tail -n 1)" >> $GITHUB_ENV
#        echo $TAG

#    - name: Find next tag
#      run: |
#        semver $TAG
#        #echo $TAG

    - name: Remove previous tag
      continue-on-error: true
      run: |
        git tag -d $TAG
        git push --delete origin $TAG

    - name: Tag this release
      run: git tag $TAG

    - name: Push Tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # get current commit hash
        commit=$(git rev-parse HEAD)

        # push new tag ref to github

        echo "Pushing tag $TAG to repo $GITHUB_REPOSITORY"

        git_refs_response=$(
        curl -s -X POST https://api.github.com/repos/corecoding/Vitals/git/refs \
        -H "Authorization: token $GITHUB_TOKEN" \
        -d @- << EOF
        {
          "ref": "refs/tags/$TAG",
          "sha": "$commit"
        }
        EOF
        )

        git_ref_posted=$( echo "${git_refs_response}" | jq .ref | tr -d '"' )

        echo "::debug::${git_refs_response}"
        if [ "${git_ref_posted}" != "refs/tags/${TAG}" ]; then
        #  exit 0
        #else
          echo "::error::Tag was not created properly."
          exit 1
        fi

    - name: Create artifact
      uses: actions/upload-artifact@v1
      with:
        name: esp32_nodemcu_firmware
        path: release/
